{"version":3,"sources":["app.js","routes.js","user.factory.js","website.filter.js","map.directive.js","sliderAge.directive.js","main/main.controller.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChfile":"app.min.js","sourcesContent":["/**\n * Configure your app...\n */\n(function() {\n\n    \"use strict\";\n\n    /**\n     * All Module configured by Angular\n     * Configure All Modules here...\n     */\n    angular.module('app', ['ngAnimate', 'angular-loading-bar'])\n        .config(['cfpLoadingBarProvider', function(cfpLoadingBarProvider) {\n            cfpLoadingBarProvider.spinnerTemplate = '<div><span class=\"fa fa-spinner\">Loading...</div>';\n            cfpLoadingBarProvider.parentSelector = '#loading-bar-container';\n\n        }]);\n\n\n}());\n","/**\n * All Routing\n */\n(function() {\n\n    'use strict';\n\n    /**\n     * All Routing here...\n     * Each Route can resolve some datas before send in controller\n     */\n    angular.module('app', ['ngRoute' ,'ngMaterial','ngMessages','ngAnimate']).config(function($routeProvider) {\n        $routeProvider\n            .when('/', {\n                templateUrl: 'app/main/main.html',\n                controller: 'mainCtrl',\n                controllerAs: 'main', // with alias in view for ANgular StyleGuide\n                resolve: { // resolve Factory before display view and send by injection in controller\n                    users: function(UserFcty) {\n                        return UserFcty.all();\n                    }\n                }\n            })\n            .when('/contact', {\n                templateUrl: 'app/contact/contact.html',\n                controller: 'contactCtrl',\n                controllerAs: 'contact'\n            });\n    }).config(function($mdThemingProvider) {\n\n    // Configure a dark theme with primary foreground yellow\n\n    $mdThemingProvider.theme('docs-dark', 'default')\n      .primaryPalette('lime')\n      .accentPalette('lime')\n      .dark();\n\n  });\n\n\n}());\n","/**\n * Contact Controller\n */\n(function() {\n\n    \"use strict\";\n\n    angular.module('app').factory('UserFcty', UserFcty);\n\n    UserFcty.$inject = ['$log', '$q', '$http'];\n\n\n    /**\n     * Handler User\n     */\n    function UserFcty($log, $q, $http) {\n\n        var obj = {\n            all: getAll\n        };\n\n        return obj;\n\n        /**\n         * get All User\n         */\n        function getAll() {\n            var deferred = $q.defer();\n            $http.get('data/walkingDeadCharacters.json')\n                .success(function(data) {\n                    deferred.resolve(data);\n                    $log.info('API chargée');\n                }).error(deferred.reject);\n            return deferred.promise; //return a promise with $q library (not exist in ES5)\n        }\n\n\n    }\n\n\n\n}());\n","/**\n * Filter\n */\n(function() {\n\n    \"use strict\";\n\n    /**\n     * 1ere syntaxe\n     * Just a filter to render HTML in view\n     * @returns\n     * */\n    angular.module('app').filter(\"trust\", ['$sce', function($sce) {\n        return function(htmlCode) {\n            return $sce.trustAsHtml(htmlCode);\n        }\n    }]);\n\n\n    /**\n     * 2eme syntax\n     * Filter Website to display link\n     */\n\n    angular.module('app').filter('website', website);\n\n    function website() {\n\n        return function(input) {\n            var link = \"<a href=\" + input + \">\" + input + \"</a>\";\n            return link;\n        }\n    }\n\n}());","/**\n * Filter\n */\n(function() {\n\n    \"use strict\";\n\n    angular.module('app').directive(\"map\", map);\n\n\n    function map() {\n\n        return {\n            restrict: 'EA',\n            replace: true,\n            transclude: true,\n            scope: { users: '=users', coords: '=coords' },\n            template: '<div id=\"map\"></div>',\n            link: function(scope, element, attrs) {\n                var map = new google.maps.Map(document.getElementById('map'), {\n                    center: scope.coords,\n                    zoom: 5\n                });\n\n                var lat = 45.758260;\n                var long = 4.855387;\n                scope.users.forEach(function(element) {\n\n                    var contentString = '<div id=\"content\">' +\n                        element.name +\n                        '</div>';\n\n                    var infowindow = new google.maps.InfoWindow({\n                        content: contentString\n                    });\n\n\n                    lat++; //exemple\n                    long++;\n                    var marker = new google.maps.Marker({\n                        position: { lat: lat, lng: long },\n                        map: map,\n                        title: element.name\n                    });\n                    marker.addListener('click', function() {\n                        infowindow.open(map, marker);\n                    });\n                    // To add the marker to the map, call setMap();\n                    marker.setMap(map);\n                });\n\n\n\n            }\n\n        };\n    }\n\n\n}());","(function() {\n\n    \"use strict\";\n\n    /**\n     * All Module configured by Angular\n     * Configure All Modules here...\n     */\n    angular.module('app').directive('sliderAge', function () {\n            return {\n                restrict: 'E',\n                scope: false,\n                templateUrl: 'app/shared/directives/sliderAge.directive.html'\n            };\n        });\n\n})();","/**\n * First Controller\n */\n(function () {\n\n    \"use strict\";\n\n    angular.module('app')\n        .controller('mainCtrl', mainCtrl)\n        .filter('birthdayShaker', function () {\n            // In the return function, we must pass in a single parameter which will be the data we will work on.\n            // We have the ability to support multiple other parameters that can be passed into the filter optionally\n            return function (input, today) {\n                /*                console.log(\"tri en cours\");\n                                console.log(input);\n                                console.log(\"today\", (today.getMonth() + 2));*/\n\n                input.forEach(function (user) {\n                    if (user.naissance.slice(3, 5) == (today.getMonth() + 2)) {\n                        console.log(\"BIRTHDAY\");\n                        user.isBirthday = true;\n                    }\n                });\n                return input;\n            };\n\n\n        });\n        /*.directive('sliderAge', function () {\n            return {\n                restrict: 'E',\n                scope: false,\n                templateUrl: 'app/shared/directives/sliderAge.html'\n            };\n        });\n*/\n    mainCtrl.$inject = ['users', '$mdToast', '$scope'];\n\n    /**\n     * Include a Factory: Best Practise\n     * Factory Resolving by Routing.\n     * Cela signifie que la Factory est chargé avant que la page se charge\n     */\n\n    function mainCtrl(users, $mdToast, $scope) {\n        var vm = this;\n        vm.title = \"Hello Angular by StyleGuide\";\n        vm.users = users;\n        vm.idCount = 0;\n        vm.items = [1, 2, 3, 4, 5, 6, 7];\n        vm.selected = [];\n        // Filtering variables\n        vm.genderFiltered = {\n            sexe: \"\"\n        };\n        vm.pseudoFiltered = {\n            pseudo: \"\"\n        };\n        vm.ageFiltered = 80;\n        vm.ageFiltering = function (character) {\n            console.log(\"annee\" + character.naissance.slice(6, 10));\n            return character.naissance.slice(6, 10) >= (2016 - vm.ageFiltered);\n        };\n        vm.today = new Date();\n\n        vm.toggle = function (item, list) {\n            var idx = list.indexOf(item);\n            if (idx > -1) {\n                list.splice(idx, 1);\n            } else {\n                list.push(item);\n            }\n        };\n\n        vm.exists = function (item, list) {\n            return list.indexOf(item) > -1;\n        };\n\n        vm.form = {\n            id: 0,\n            pseudo: \"\",\n            sexe: \"\",\n            photo: \"\",\n            activite: \"\",\n            naissance: \"\",\n            coord: {\n                lat: null,\n                long: null\n            },\n            pays: \"\",\n            resume: \"\",\n            saison: [],\n            isBirthday: false\n        };\n\n        vm.deleteUser = function (user) {\n            console.log(user);\n            var id = vm.users.indexOf(user);\n            vm.users.splice(id, 1);\n            // TOAST\n            vm.showSimpleToast(user);\n        };\n\n        vm.showSimpleToast = function (msg) {\n            var pinTo = \"top right\";\n            console.log(pinTo);\n            $mdToast.show(\n                $mdToast.simple()\n                .textContent(msg.pseudo + \" has been killed\")\n                .position(pinTo)\n                .hideDelay(3000)\n            );\n        };\n\n        vm.addCharacter = function () {\n            console.log('formulaire envoyé');\n            console.log(vm.form);\n            vm.users.push({\n                id: vm.users.length + 1,\n                pseudo: vm.form.pseudo,\n                sexe: vm.form.sexe,\n                photo: vm.form.photo,\n                activite: vm.form.activite,\n                naissance: vm.form.naissance.getDate() + \"/\" + vm.form.naissance.getMonth() + 1 + \"/\" + vm.form.naissance.getFullYear(),\n                coord: vm.form.coord,\n                pays: vm.form.pays,\n                resume: vm.form.resume,\n                saison: vm.form.saison,\n                isBirthday: false\n            });\n\n\n            vm.form = {\n                id: 0,\n                pseudo: \"\",\n                sexe: \"\",\n                photo: \"\",\n                activite: \"\",\n                naissance: \"\",\n                coord: {\n                    lat: null,\n                    long: null\n                },\n                pays: \"\",\n                resume: \"\",\n                saison: [],\n\n            };\n\n\n        };\n\n        /*function evaluateForm() {\n            console.log(\"coucou\");\n        }\n\n        $scope.$watch('charForm.longitude.$valid', evaluateForm);\n*/\n    }\n\n}());\n\n\n\n\n/*{\n    \"$viewValue\": null,\n    \"$modelValue\": null,\n    \"$validators\": {},\n    \"$asyncValidators\": {},\n    \"$parsers\": [null],\n    \"$formatters\": [null, null],\n    \"$viewChangeListeners\": [],\n    \"$untouched\": true,\n    \"$touched\": false,\n    \"$pristine\": true,\n    \"$dirty\": false,\n    \"$valid\": false,\n    \"$invalid\": true,\n    \"$error\": {\n        \"required\": true\n    },\n    \"$name\": \"longitude\",\n    \"$options\": null\n}*/"]}